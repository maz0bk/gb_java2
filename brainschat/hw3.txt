/*
В Controller добавил переменную  private History chatHistory;
В метод linkCallbacks() в Network.setCallOnAuthentificated после аутентификации добавил вывод истории textArea.appendText(chatHistory.getLastHistory(100)+"\n");
в Network.setCallOnMsgReceived если пришло обычное сообщение пишем историю  chatHistory.writeMsgToHistory(msg + "\n");
*/

package com.geekbrains.client;

import java.io.*;

public class History {
    private File fileHistory;

    public History(String nickName) {
        fileHistory = new File("history_"+nickName+".txt");
    }
    public String getAllHistory(){
        if (!fileHistory.exists()){
        return "";
        }

        String result="";
        String tmp;
        try {
           BufferedReader bfReader = new BufferedReader(new FileReader(fileHistory));

            try {
                while ((tmp = bfReader.readLine()) != null){
                    result +=tmp+"\n";
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
            bfReader.close();
        } catch (IOException e) {
            e.printStackTrace();
        }

        return result;
    }

    public String getLastHistory(int rowsCount){
        if (!(fileHistory.exists()&& rowsCount>0)){
            return "";
        }
        StringBuilder sb = new StringBuilder();
        try (RandomAccessFile raf = new RandomAccessFile(fileHistory,"r")){
            long startPoz = fileHistory.length();
            if (startPoz == 0) return "";
            int numberFindStrings = 0;
            String tmp;
            int read=0;
            while (numberFindStrings < rowsCount && startPoz>=0){
                raf.seek(startPoz);
                startPoz--;
                try{
                    read = raf.read();
                }catch (IOException e){
                    continue;
                }
                if ((char)read =='\n'){
                    tmp = raf.readLine();
                    if( tmp == null) continue;
                    numberFindStrings++;
                    sb.insert(0,"\n");
                    sb.insert(0,tmp);
                }
            }
        }catch (IOException e){
            e.printStackTrace();
        }
        return sb.toString();
    }

    public void writeMsgToHistory(String msg){
        try {
            FileWriter fileWriter= new FileWriter(fileHistory,true);
            fileWriter.append(msg);
            fileWriter.close();

        } catch (IOException e) {
            e.printStackTrace();
        }

    }
}
